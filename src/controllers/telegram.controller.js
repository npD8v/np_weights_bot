const telegramService = require('../services/telegram.service');
const { snapshotsMapper } = require('../helpers/const.helper');
const { constructPostBody } = require('../helpers/axios.helper');

class TelegramController {
    async invokeKeyboardMainMenu(req, res, next) {
        const { message } = req.body;
        const chatId = message.chat.id;
        const messageText = `–ü—Ä–∏–≤—ñ—Çüëã –Ø –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!\n‚¨á–î–ª—è –ø–æ—á–∞—Ç–∫—É –æ–±–µ—Ä—ñ—Ç—å –≤–∞–≥–æ–≤–æ–∏–π —Ç–µ—Ä–º—ñ–Ω–∞–ª –∑ –º–µ–Ω—é.‚¨á`;
        try {
            await telegramService.invokeKeyboardMenu(chatId, {
                text: messageText,
                keyboard: [
                    [{ text: "–í–∞–≥–æ–≤–∞ 1" }, { text: "–í–∞–≥–æ–≤–∞ 2" }],
                    [{ text: "–í–∞–≥–æ–≤–∞ 3" }, { text: "–í–∞–≥–æ–≤–∞ 4" }]
                ],
            })
            await telegramService.deleteMessage(chatId, message.message_id);
        } catch (err) {
            await telegramService.sendMessage(chatId, err.message);
        }
    }

    async sendDecliningMessage(req, res,next) {
        const { message } = req.body;
        const chatId = message.chat.id;
        const messageText = `–Ø –ø–æ–∫–∏—â–æ –Ω–µ –∑–Ω–∞—é —â–æ —Ç–∞–∫–µ "${message.text}"ü§î\n‚¨á‚¨á‚¨á–°–ø—Ä–æ–±—É–π –æ–±—Ä–∞—Ç–∏ —â–æ—Å—å –∑ –º–µ–Ω—é‚¨á‚¨á‚¨á`;
        try {
            await telegramService.sendMessage(chatId, messageText);  
        } catch (err) {
            await telegramService.sendMessage(chatId, err.message);
            await telegramService.deleteMessage(chatId, message.message_id); 
        }
    }

    async deleteMessage(chatId, messageId){
        try {
            await telegramService.deleteMessage(chatId, messageId);
        } catch (error) {
            
        }
    }

    async sendWeightState(req, res, next) {
        const { message } = req.body;
        const chatId = message.chat.id;

        const weightIdentifier = `weight${message.text.split(' ')[1]}`;

        const messageMapper = {
            weight1: '–í–∞–≥–æ–≤–∞ 1 (–ü–µ—Ä—à–∏–π –¥–≤—ñ—Ä)',
            weight2: '–í–∞–≥–æ–≤–∞ 2 (–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞ –ø—Ä–∞–≤–∞)',
            weight3: '–í–∞–≥–æ–≤–∞ 3 (–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞ –ª—ñ–≤–∞)',
            weight4: '–í–∞–≥–æ–≤–∞ 4 (–†–µ–Ω–¥–µ—Ä–∏–Ω–≥)'
        };


        try{
            const {body, headers} = await constructPostBody(chatId, snapshotsMapper[weightIdentifier]);
            await telegramService.sendMessageWithPictures(body, headers);
            await telegramService.sendMessage(chatId, `${messageMapper[weightIdentifier]}`);
            await telegramService.deleteMessage(chatId, message.message_id);
        } catch (err) {
            await telegramService.sendMessage(chatId, err.message);
        }
    }
}

module.exports = new TelegramController();
